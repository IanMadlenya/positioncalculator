<?xml version="1.0"?>

<ruleset name="Qulice Ruleset"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>
        This ruleset checks code for potential mess
    </description>

    <rule ref="rulesets/java/basic.xml">
        <exclude name="AvoidThreadGroup"/>
    </rule>
    <rule ref="rulesets/java/braces.xml"/>
    <rule ref="rulesets/java/clone.xml"/>
    <rule ref="rulesets/java/codesize.xml"/>
    <rule ref="rulesets/java/design.xml"/>
    <rule ref="rulesets/java/finalizers.xml"/>
    <rule ref="rulesets/java/imports.xml"/>
    <rule ref="rulesets/java/j2ee.xml"/>
    <rule ref="rulesets/java/javabeans.xml"/>
    <rule ref="rulesets/java/logging-java.xml">
        <!--<exclude name="GuardLogStatementJavaUtil"/>-->
    </rule>
    <rule ref="rulesets/java/optimizations.xml"/>
    <rule ref="rulesets/java/strings.xml"/>
    <rule ref="rulesets/java/sunsecure.xml"/>
    <rule ref="rulesets/java/unusedcode.xml"/>

    <rule ref="rulesets/java/coupling.xml">
        <!--<exclude name="LoosePackageCoupling"/>-->
        <!--<exclude name="LawOfDemeter"/>-->
    </rule>

    <rule ref="rulesets/java/controversial.xml">
        <!--<exclude name="AtLeastOneConstructor"/>-->
        <!--<exclude name="AvoidFinalLocalVariable"/>-->
        <!--<exclude name="AvoidLiteralsInIfCondition"/>-->
        <!--<exclude name="DataflowAnomalyAnalysis"/>-->
    </rule>

    <rule ref="rulesets/java/typeresolution.xml">
        <!--<exclude name="SignatureDeclareThrowsException"/>-->
    </rule>

    <rule ref="rulesets/java/junit.xml">
        <!--<exclude name="JUnitTestsShouldIncludeAssert"/>-->
    </rule>

    <rule ref="rulesets/java/naming.xml">
        <!--<exclude name="ShortClassName"/>-->
        <!--<exclude name="ShortVariable"/>-->
    </rule>

    <rule ref="rulesets/java/strictexception.xml">
        <!--<exclude name="SignatureDeclareThrowsException"/>-->
    </rule>

    <rule ref="rulesets/jsp/basic-jsf.xml"/>

    <rule name="UnnecessaryLocalRule"
          message="Avoid creating unnecessary local variables like ''{0}''"
          class="com.qulice.pmd.rules.UnnecessaryLocalRule">
    </rule>

    <rule name="ConstructorShouldDoInitialization"
          message="Avoid doing field initialization outside constructor."
          language="java"
          class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>
            Avoid doing field initialization outside class constructor.
            Such initialization is allowed only when there is no constructor.
        </description>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                        //ClassOrInterfaceBody
                        [count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)>0]
                        [count(ClassOrInterfaceBodyDeclaration/FieldDeclaration[@Static='false']/VariableDeclarator/VariableInitializer)>0]
                    ]]>
                </value>
            </property>
        </properties>
        <priority>3</priority>
    </rule>

    <rule name="OnlyOneConstructorShouldDoInitialization"
          message="Avoid field initialization in several constructors."
          language="java"
          class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>
            Avoid doing field initialization in several constructors.
            Only one main constructor should do real work.
            Other constructors should delegate initialization to it.
        </description>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                            //ClassOrInterfaceBody[count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration)>1]
                            [count(ClassOrInterfaceBodyDeclaration/ConstructorDeclaration[BlockStatement])>1]
                    ]]>
                </value>
            </property>
        </properties>
        <priority>3</priority>
    </rule>

</ruleset>